@model List<webjooneli.Models.Entities.NewsModel>

<div class="">
    <div class="container py-5">
        <!-- Featured News Carousel -->
        @if (Model.Any(n => n.IsFeatured))
        {
            <div class="mb-5">

                <h2 class="mb-4 display-2 border-bottom text-center" style="background: linear-gradient(to right, #f44336, #4caf50); -webkit-background-clip: text; color: transparent;">
                   Featured Stories
                </h2>

                <div id="featuredNewsCarousel" class="carousel slide" data-bs-ride="carousel" data-bs-interval="7000">
                    <div class="carousel-inner">
                        @{
                            var featuredItems = Model.Where(n => n.IsFeatured).ToList();
                            for (int i = 0; i < featuredItems.Count; i++)
                            {
                                var item = featuredItems[i];
                                <div class="carousel-item @(i == 0 ? "active" : "")">
                                    <div class="card h-100 border-0 shadow-sm overflow-hidden">
                                        <div class="ratio ratio-16x9 bg-light">
                                            @if (!string.IsNullOrEmpty(item.ImageId))
                                            {
                                                <img src="/@item.ImageId" class="card-img-top object-fit-cover" alt="@item.Title">
                                            }
                                            else
                                            {
                                                <div class="d-flex align-items-center justify-content-center text-muted">
                                                    <i class="bi bi-newspaper fs-1"></i>
                                                </div>
                                            }
                                        </div>
                                        <div class="card-body">
                                            <span class="badge bg-primary mb-2">@item.Category</span>
                                            <h3 class="h5 card-title">@item.Title</h3>
                                            <p class="card-text text-muted">@(item.Content.Length > 100 ? item.Content.Substring(0, 100) + "..." : item.Content)</p>
                                        </div>
                                        <div class="card-footer bg-transparent">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <small class="text-muted">@item.CreatedAt.ToString("MMMM dd, yyyy")</small>
                                                <a href="@Url.Action("NewsDetail", "News", new { id = item.Id })" class="btn btn-sm btn-outline-danger stretched-link">Read More</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#featuredNewsCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon bg-dark rounded-circle p-3" aria-hidden="true"></span>
                        <span class="visually-hidden ">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#featuredNewsCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon bg-dark rounded-circle p-3" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
        }

        <!-- Main Content -->
        <div class="row g-4">
            <!-- News Grid -->
            <div class="col-lg-8">
                <h2 class="mb-4 border-bottom text-center" style="background: linear-gradient(to right, #f44336, #4caf50); -webkit-background-clip: text; color: transparent;">
                   Latest Updates
                </h2>
                <div class="row row-cols-1 row-cols-md-2 g-4">
                    @foreach (var item in Model)
                    {
                        <div class="col ">
                            <div class="card bg-secondary-subtle h-100 border-0 shadow-sm overflow-hidden">
                                <div class="ratio ratio-16x9 bg-light">
                                    @if (!string.IsNullOrEmpty(item.ImageId))
                                    {
                                        <img src="/@item.ImageId" class="card-img-top object-fit-cover" alt="@item.Title">
                                    }
                                    else
                                    {
                                        <div class="d-flex align-items-center justify-content-center text-muted">
                                            <i class="bi bi-newspaper fs-1"></i>
                                        </div>
                                    }
                                    @if (item.IsFeatured)
                                    {
                                        <span class="position-absolute top-0 end-0 m-2 badge text-dark">
                                            <i class="bi bi-star-fill me-1"></i>Featured
                                        </span>
                                    }
                                </div>
                                <div class="card-body">
                                    <span class="badge bg-danger mb-2">@item.Category</span>
                                    <h3 class="h5 card-title">@item.Title</h3>
                                    <p class="card-text text-muted">@(item.Content.Length > 150 ? item.Content.Substring(0, 150) + "..." : item.Content)</p>
                                </div>
                                <div class="card-footer bg-transparent">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">@item.CreatedAt.ToString("MMMM dd, yyyy")</small>
                                        <a href="@Url.Action("NewsDetail", "News", new { id = item.Id })" class="btn btn-sm btn-link text-decoration-none">
                                            Read More <i class="bi bi-arrow-right"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @* <nav aria-label="News pagination" class="mt-5">
                    <ul class="pagination justify-content-center">
                        <li class="page-item disabled">
                            <a class="page-link text-black" href="#" tabindex="-1">Previous</a>
                        </li>
                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item">
                            <a class="page-link text-black" href="#">Next</a>
                        </li>
                    </ul>
                </nav> *@
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <div class="sticky-top" style="top: 20px;">
                    <!-- Categories -->
                  @*   <div class="card mb-4 border-0 shadow-sm">
                        <div class="card-body">
                            <h3 class="h5 card-title mb-3">Categories</h3>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0">
                                    <a href="#" class="text-decoration-none">Company News</a>
                                    <span class="badge bg-primary rounded-pill">@Model.Count(n => n.Category == 1)</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0">
                                    <a href="#" class="text-decoration-none">Product Updates</a>
                                    <span class="badge bg-primary rounded-pill">@Model.Count(n => n.Category == "Product Updates")</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0">
                                    <a href="#" class="text-decoration-none">Industry Insights</a>
                                    <span class="badge bg-primary rounded-pill">@Model.Count(n => n.Category == "Industry Insights")</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0">
                                    <a href="#" class="text-decoration-none">Events</a>
                                    <span class="badge bg-primary rounded-pill">@Model.Count(n => n.Category == "Events")</span>
                                </li>
                            </ul>
                        </div>
                    </div> *@

                    <!-- Recent News -->
                    <div class="card bg-secondary-subtle mb-4 border-0 shadow-sm">
                        <div class="card-body">
                            <h3 class="h5 card-title mb-3">Recent Posts</h3>
                            <div class="list-group list-group-flush">
                                @foreach (var item in Model.OrderByDescending(n => n.CreatedAt).Take(3))
                                {
                                    <a href="@Url.Action("NewsDetail", "News", new { id = item.Id })" class="list-group-item list-group-item-action border-0 px-0">
                                        <div class="d-flex align-items-center rounded-2">
                                            <div class="flex-shrink-0 ratio ratio-1x1 bg-light" style="width: 60px;">
                                                @if (!string.IsNullOrEmpty(item.ImageId))
                                                {
                                                    <img src="/@item.ImageId " class="object-fit-cover rounded" alt="@item.Title">
                                                }
                                                else
                                                {
                                                    <div class="d-flex align-items-center justify-content-center text-muted">
                                                        <i class="bi bi-newspaper"></i>
                                                    </div>
                                                }
                                            </div>
                                            <div class="flex-grow-1 ms-3">
                                                <h4 class="h6 mb-1">@item.Title</h4>
                                                <small class="text-muted">@item.CreatedAt.ToString("MMM dd")</small>
                                            </div>
                                        </div>
                                    </a>
                                }
                            </div>
                        </div>
                    </div>

                    <!-- Newsletter -->
                    @await Html.PartialAsync("_subscription")

                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Minimal custom CSS to enhance Bootstrap */
    .object-fit-cover {
        object-fit: cover;
    }
/* 
    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1) !important;
        } */

    .carousel-control-prev,
    .carousel-control-next {
        width: auto;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-size: 1rem;
    }
</style> 

@*  <script>
    // Initialize Bootstrap components
    document.addEventListener('DOMContentLoaded', function() {
        // Enable tooltips if needed
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Add intersection observer for scroll animations
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('animate__animated', 'animate__fadeInUp');
                }
            });
        }, { threshold: 0.1 });

        document.querySelectorAll('.card').forEach(card => {
            observer.observe(card);
        });
    });
</script> *@